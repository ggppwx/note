#+TITLE: clean code notes

* content
  
** meaningful name
- shorter name better
- no confusions, don't name 'List' if it is not a list



** functions 
- small function 
  - one line in if-else block, this should be a function 
- do one thing 
  - means steps on one level consists of one thing
  - one level of abstraction per function
- replace switch with polymorphism
- don't be afraid of using long descriptive name
- less function arguments 
  - transform function should return the value after transformation
  - flag argument is UGLY
  - be aware of dyadic function.
  - wrap arguments by using objects
  - argument list 
  - verb + noun function name 
- no side effects, no hidden things 
- in general, output argument should be avoided 
- separate command & query 
  - error code vs try-catch
- duplicaton may be evil in software
- no continue, break, never go to
- functions are verb, classes are noun








** comments

** formatting 
- variable declaration, local variables should be declared on the top of the function 
- functions caller should be above callee
- example 
#+BEGIN_SRC java
public class CodeAnalyzer implements JavaFileAnalysis {  
  private int lineCount;  
  private int maxLineWidth;  
  private int widestLineNumber;  
  private LineWidthHistogram lineWidthHistogram;  
  private int totalChars;  
  
  public CodeAnalyzer() {    
    lineWidthHistogram = new LineWidthHistogram();  
  }  

  public static List<File> findJavaFiles(File parentDirectory) {    
    List<File> files = new ArrayList<File>();    
    findJavaFiles(parentDirectory, files);    
    return files;  
  }
}
#+END_SRC

** objects and data structure
