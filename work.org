#+TITLE:tasks at work     
#+CATEGORY: bbwork
* workflow
** TODO [#A] daily workflow
   SCHEDULED: <2017-08-07 Mon ++1w>   
   - State "DONE"       from "TODO"       [2017-07-19 Wed 17:25]
   - State "DONE"       from "TODO"       [2017-07-19 Wed 17:25]
   - State "DONE"       from "TODO"       [2017-07-19 Wed 17:25]
   - State "DONE"       from "TODO"       [2017-06-30 Fri 15:19]
   - State "DONE"       from "TODO"       [2017-06-23 Fri 17:27]
   - State "DONE"       from "TODO"       [2017-06-20 Tue 10:45]
   - State "DONE"       from "TODO"       [2017-06-09 Fri 13:19]
   - State "DONE"       from "TODO"       [2017-06-02 Fri 12:21]
   - State "DONE"       from "TODO"       [2017-05-31 Wed 10:03]
   - State "DONE"       from "TODO"       [2017-05-09 Tue 11:59]
   - State "DONE"       from "TODO"       [2017-05-02 Tue 12:39]
   - State "DONE"       from "TODO"       [2017-04-25 Tue 11:51]
   - State "DONE"       from "TODO"       [2017-04-18 Tue 11:45]
   - State "DONE"       from "TODO"       [2017-04-17 Mon 12:02]
   - State "DONE"       from "TODO"       [2017-04-10 Mon 12:34]
   - State "DONE"       from "TODO"       [2017-04-07 Fri 11:28]
SCHEDULED: <2017-08-08 Tue ++1w>   
SCHEDULED: <2017-08-09 Wed ++1w>   
SCHEDULED: <2017-08-04 Fri ++1w>   
SCHEDULED: <2017-08-07 Mon ++1w>   
SCHEDULED: <2017-08-08 Tue ++1w>   
   :PROPERTIES:
   :LAST_REPEAT: [2017-07-19 Wed 17:25]
   :END:
- reading work email   
- reading jira tasks 
- reading bbwork board




** TODO [#B] go through team bf/bb queue 
   SCHEDULED: <2017-07-22 Sat .+3d/5d>
   - State "DONE"       from "TODO"       [2017-07-19 Wed 17:25]
   - State "DONE"       from "TODO"       [2017-06-30 Fri 15:19]
   - State "DONE"       from "TODO"       [2017-06-26 Mon 16:13]
   - State "DONE"       from "TODO"       [2017-06-23 Fri 17:27]
   - State "DONE"       from "TODO"       [2017-06-20 Tue 14:26]
   - State "DONE"       from "TODO"       [2017-06-15 Thu 16:04]
   - State "DONE"       from "TODO"       [2017-06-12 Mon 13:55]
   - State "DONE"       from "TODO"       [2017-06-09 Fri 13:19]
   - State "DONE"       from "TODO"       [2017-06-05 Mon 10:16]
   - State "DONE"       from "TODO"       [2017-05-31 Wed 10:03]
   - State "DONE"       from "TODO"       [2017-05-08 Mon 18:03]
   - State "DONE"       from "TODO"       [2017-05-04 Thu 14:41]
   - State "DONE"       from "TODO"       [2017-05-01 Mon 17:26]
   - State "DONE"       from "TODO"       [2017-04-27 Thu 12:04]
   - State "DONE"       from "TODO"       [2017-04-24 Mon 13:52]
   - State "DONE"       from "TODO"       [2017-04-21 Fri 11:58]
   - State "DONE"       from "TODO"       [2017-04-18 Tue 11:45]
   - State "DONE"       from "TODO"       [2017-04-10 Mon 12:38]
   - State "DONE"       from "TODO"       [2017-04-07 Fri 17:14]
   - State "DONE"       from "TODO"       [2017-04-03 Mon 16:41]
   - State "DONE"       from "TODO"       [2017-03-30 Thu 13:57]
   - State "DONE"       from "TODO"       [2017-03-27 Mon 14:40]
   - State "DONE"       from "TODO"       [2017-03-22 Wed 13:55]
   - State "DONE"       from "TODO"       [2017-03-15 Wed 17:43]
   - State "DONE"       from "TODO"       [2017-03-07 Tue 12:05]
   - State "DONE"       from "TODO"       [2017-03-03 Fri 15:59]
   - State "DONE"       from "TODO"       [2017-02-27 Mon 15:50]
   - State "DONE"       from "TODO"       [2017-02-07 Tue 10:21]
   - State "DONE"       from "TODO"       [2017-02-01 Wed 18:05]
   - State "DONE"       from "TODO"       [2017-01-27 Fri 21:19]
   - State "DONE"       from "TODO"       [2017-01-23 Mon 18:06]
   - State "DONE"       from "TODO"       [2017-01-09 Mon 16:11]
   - State "DONE"       from "TODO"       [2017-01-06 Fri 17:53]
   - State "DONE"       from "TODO"       [2016-12-20 Tue 17:42]
   - State "DONE"       from "TODO"       [2016-12-16 Fri 15:16]
   - State "DONE"       from "TODO"       [2016-10-21 Fri 16:48]
   - State "DONE"       from "TODO"       [2016-10-17 Mon 14:44]
   - State "DONE"       from "TODO"       [2016-10-10 Mon 11:53]
   - State "DONE"       from "TODO"       [2016-10-06 Thu 17:53]
   - State "DONE"       from "TODO"       [2016-10-03 Mon 15:28]
   - State "DONE"       from "TODO"       [2016-09-28 Wed 12:10]
   - State "DONE"       from "TODO"       [2016-09-26 Mon 17:29]
   - State "DONE"       from "TODO"       [2016-09-23 Fri 14:55]
   - State "DONE"       from "TODO"       [2016-09-21 Wed 12:32]
   - State "DONE"       from "TODO"       [2016-09-19 Mon 15:21]
   - State "DONE"       from "TODO"       [2016-09-16 Fri 10:59]
   - State "DONE"       from "TODO"       [2016-09-15 Thu 12:26]
   CLOCK: [2016-09-15 Thu 11:54]--[2016-09-15 Thu 12:26] =>  0:32
   - State "DONE"       from "TODO"       [2016-09-13 Tue 12:02]
   - State "DONE"       from "TODO"       [2016-09-12 Mon 14:06]
   CLOCK: [2016-09-12 Mon 13:47]--[2016-09-12 Mon 14:06] =>  0:19
   - State "DONE"       from "TODO"       [2016-09-06 Tue 13:40]
   - State "DONE"       from "TODO"       [2016-09-06 Tue 13:40]
   - State "DONE"       from "TODO"       [2016-09-02 Fri 14:59]
   CLOCK: [2016-09-02 Fri 14:23]--[2016-09-02 Fri 14:59] =>  0:36
   - State "DONE"       from "TODO"       [2016-08-30 Tue 11:42]
   - State "DONE"       from "TODO"       [2016-08-30 Tue 11:42]
   - State "DONE"       from "TODO"       [2016-08-26 Fri 11:13]
   CLOCK: [2016-08-26 Fri 11:03]--[2016-08-26 Fri 11:13] =>  0:10
   - State "DONE"       from "TODO"       [2016-08-25 Thu 14:37]
   CLOCK: [2016-08-25 Thu 14:30]--[2016-08-25 Thu 14:37] =>  0:07
   - State "DONE"       from "TODO"       [2016-08-22 Mon 16:36]
   - State "DONE"       from "TODO"       [2016-08-19 Fri 12:23]
   CLOCK: [2016-08-19 Fri 12:08]--[2016-08-19 Fri 12:23] =>  0:15
   - State "DONE"       from "TODO"       [2016-08-17 Wed 18:04]
   CLOCK: [2016-08-17 Wed 17:40]--[2016-08-17 Wed 18:04] =>  0:24
   :PROPERTIES:
   :LAST_REPEAT: [2017-07-19 Wed 17:25]
   :STYLE:    habit
   :END:      




* TODOLIST
** TODO [#B] add documentation to precog 

** TODO [#C] create a demo template 

** Sprint
*** TODO reporting test daily run 
*** TODO [#B] unit tests for each bug 

** TODO PRMC enhancement
* KTLO



* extra projects. 
- reading books 
- tryout new technology 
- productivity boost 
- online shopping 


* retrospect
** TODO [#B] plan new BB work to do 
   SCHEDULED: <2017-07-24 Mon ++1w>
   - State "DONE"       from "TODO"       [2017-07-19 Wed 17:25]
   - State "DONE"       from "TODO"       [2017-06-26 Mon 16:12]
   - State "DONE"       from "TODO"       [2017-06-20 Tue 10:46]
   - State "DONE"       from "TODO"       [2017-06-13 Tue 16:49]
   - State "DONE"       from "TODO"       [2017-06-06 Tue 11:04]
   - State "DONE"       from "TODO"       [2017-05-31 Wed 15:22]
   - State "DONE"       from "TODO"       [2017-05-09 Tue 11:07]
   - State "DONE"       from "TODO"       [2017-05-02 Tue 18:04]
   - State "DONE"       from "TODO"       [2017-04-24 Mon 13:49]
   - State "DONE"       from "TODO"       [2017-04-18 Tue 10:40]
   - State "DONE"       from "TODO"       [2017-04-10 Mon 18:02]
   - State "DONE"       from "TODO"       [2017-04-04 Tue 18:15]
   :PROPERTIES:
   :Effort:   10 min
   :LAST_REPEAT: [2017-07-19 Wed 17:25]
   :END:

* TODO Generic work 
** TODO fix bugs 
* TODO MISC jobs
** read code base 


** better javascript code 

   
** better at emacs 
[[file:scratch.org::*emacs learning]]

** learn refactoring 
file:refactor.org

** TODO [#B] source code reading 


* productivity
** TODO code template snippet
** TODO integrate jira with bbgithub   




* NOTE
** project im working on 
*** pisvc
- a middle layer between rendering engine & data acqusition 
- simplify the system 
- c++ 
- MVC
*** alinris 
- render the report 
- c++ 
- MVC bloomberg bas framework 

*** FATE risk factor model 
- DMP publisher
- cache system 
- singleton

*** PORT+ project 
- python-based bas service 
- xquery script generate the report
- python template 

*** UI work 
- RAPID: a javascript-based framework
- PORT+ UI framwork 

*** POINT reporting system 
- adding new layers to PORT+ reporting
- LUA job management. orchestration 
- nodes & graph 

*** post-process the excel 
- Aphachi POI java API
- write algorithm to group rows in excel report( based on indentation ) 

** language
- python
- c++ 
- javascript
- xquery 
- java
*** TODO read code base 
- find the design patterns 
- something about the language


** what is the most interesting bug you meet ? 


** most challenging project ?


** what are technologies used in the project ? 





* TODO [#C] effective python
** pythonic 
** function

